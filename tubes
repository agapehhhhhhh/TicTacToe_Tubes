// library
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>

// tipe data bentukan
typedef struct{
    char nama[20];
    char giliran; 
}Pemain;

// deklarasi var global
int papan;
char board3[3][3], board5[5][5], board7[7][7];
char PLAYER1 = 'X';
char PLAYER2 = 'O';
Pemain pemain1, pemain2;

// sub-modul
int exitProgram();
void inputNama(char nama[], char nama1[]);
void tampilan_awal();
void pilihMenu();
void Load();
void tampilan_pilih_mode();
void tampilan_pilih_giliran();
void resetPapan();
void printPapan();
int cekKotakKosong();
void langkahPemain1();
void langkahPemain2();
char cekMenang();
void cetakMenang(char winner);
void modulGameplay();


int main(){
    tampilan_awal();
    return 0;
}

//isi sub-modul
void inputNama(char nama[], char nama1[]){
    printf("\nMasukkan Nama Player 1 dan Player 2 : \n\n");
    scanf("%[^\n] %[^\n]", nama, nama1);
}


int exitProgram(){
    printf(" Terima Kasih Sudah Mencoba Gim Buatan Kami");
    return 0;
}
void tampilan_awal(){
    printf(" ================================================\n" );
    printf("|                  TIC TAC TOE                   |\n");
    printf("|        By : Badan Keilmuan Pemrograman         |\n");
    printf("|                HOPE YOU THE BEST               |\n");
    printf(" ================================================\n" );
    printf("|                   MAIN MENU                    |\n");
    printf("|                 1. New Game                    |\n");
    printf("|                 2. Load Game                   |\n");
    printf("|                 3. Exit Game                   |\n");
    printf(" ================================================\n\n");
    pilihMenu();
}

void pilihMenu(){
    printf("Input a Number : ");
    int a;
    scanf("%d",& a);
    switch (a)
    {
    case 1:
        tampilan_pilih_mode();
        break;
    case 2:
        Load();
        break;
    case 3:

        break;
    default:
        printf("\n\nInstruksi Tidak Jelas\n\n");
        pilihMenu();
        break;
    }
}

void Load(){
    printf("IN PROGRESS");
}

void tampilan_pilih_mode()
{
    int mode;
    printf(" ================================================\n");
    printf("|                   CHOOSE MODE                  |\n");
    printf(" ================================================\n");
    printf("|                    1. 3 x 3                    |\n");
    printf("|                    2. 5 x 5                    |\n");
    printf("|                    3. 7 x 7                    |\n");
    printf("|                   99. Return                   |\n");
    printf(" ================================================\n\n");
    printf("Input a Number : ");
    scanf("%d", &mode);
    switch (mode)
    {
    case 1:
        papan = 3;
         modulGameplay();
         break;
    case 2:
        papan = 5;
        modulGameplay();
        break;
    case 3:
        papan = 7;
         modulGameplay();
         break;
    case 99:
        tampilan_awal();
        break;
    default: 
        printf("Instruksi tidak jelas");
        tampilan_pilih_mode();
        break;
    }
}

void tampilan_pilih_giliran(){
    int giliran;
    printf(" ================================================\n");
    printf("|           CHOOSE TURN : %s                 |\n", pemain1.nama);
    printf(" ================================================\n");
    printf("|                       1. X                     |\n");
    printf("|                       2. O                     |\n");
    printf(" ================================================\n");
    printf("Input a Number : ");   
    scanf("%d", &giliran);

    if(giliran == 1){
        pemain1.giliran = PLAYER1;
        pemain2.giliran = PLAYER2;
    }else{
        pemain1.giliran = PLAYER2;
        pemain2.giliran = PLAYER1;
    }
}



void resetPapan(){
    switch (papan)
    {
    case 3:
        for(int i = 0; i<3; i++){
            for(int j =0; j<3; j++){
                board3[i][j]= ' ';
            }
        }
        break;
    case 5:
        for(int i = 0; i< 5; i++){
            for(int j =0; j<5; j++){
                board5[i][j] = ' ';
            }
        }
        break;
    case 7 :
        for(int i = 0; i < 7; i++){
            for(int j = 0; j < 7; j++){
                board5[i][j] = ' ';
            }
        }
        break;
    }
    
}
void printPapan(){
    switch (papan)
    {
    case 3:
    printf(" ================================================ \n" );
    printf("|                                                |\n" );
    printf("|               TIC TAC TOE 3 x 3                |\n");
    printf("|                                                |\n" );
    printf(" ================================================ \n");    
    printf("\tPlayer 1 (X)  -  Player 2 (O)\n\n\n");
        printf("\nK  O  L  O  M");
        printf("\n 1 | 2 | 3 ");
        printf("\n---|---|---\n");
        printf(" %c | %c | %c | 1   B", board3 [0][0], board3[0][1], board3[0][2]);
        printf("\n---|---|---      A\n");
        printf(" %c | %c | %c | 2   R", board3 [1][0], board3[1][1], board3[1][2]);
        printf("\n---|---|---      I\n");
        printf(" %c | %c | %c | 3   S", board3 [2][0], board3[2][1], board3[2][2]);
        printf("\n");
        break;
    case (5):
    printf(" ================================================ \n" );
    printf("|                                                |\n" );
    printf("|               TIC TAC TOE 5 x 5                |\n");
    printf("|                                                |\n" );
    printf(" ================================================ \n");    

    printf("     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  \n", board5[0][0], board5[0][1], board5[0][2], board5[0][3], board5[0][4]);
    printf("_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  \n", board5[1][0], board5[1][1], board5[1][2], board5[1][3], board5[1][4]);
    printf("_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  \n", board5[2][0], board5[2][1], board5[2][2], board5[2][3], board5[2][4]);
    printf("_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  \n", board5[3][0], board5[3][1], board5[3][2], board5[3][3], board5[3][4]);
    printf("_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  \n", board5[4][0], board5[4][1], board5[4][2], board5[4][3], board5[4][4]);
    printf("     |     |     |     |     \n");
        break;
    case (7):
    printf(" ================================================ \n" );
    printf("|                                                |\n" );
    printf("|               TIC TAC TOE 7 x 7                |\n");
    printf("|                                                |\n" );
    printf(" ================================================ \n");    
    
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[0][0], board7[0][1], board7[0][2], board7[0][3], board7[0][4],  board7[0][5], board7[0][6]);
    printf("_____|_____|_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[1][0], board7[1][1], board7[1][2], board7[1][3], board7[1][4],  board7[1][5], board7[1][6]);
    printf("_____|_____|_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[2][0], board7[2][1], board7[2][2], board7[2][3], board7[2][4],  board7[2][5], board7[2][6]);
    printf("_____|_____|_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[3][0], board7[3][1], board7[3][2], board7[3][3], board7[3][4],  board7[3][5], board7[3][6]);
    printf("_____|_____|_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[4][0], board7[4][1], board7[4][2], board7[4][3], board7[4][4],  board7[4][5], board7[4][6]);
    printf("_____|_____|_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[5][0], board7[5][1], board7[5][2], board7[5][3], board7[5][4],  board7[5][5], board7[5][6]);
    printf("_____|_____|_____|_____|_____|_____|_____\n");
    printf("     |     |     |     |     |     |     \n");
    printf("  %c  |  %c  |  %c  |  %c  |  %c  |  %c  |  %c \n", board7[6][0], board7[6][1], board7[6][2], board7[6][3], board7[6][4],  board7[6][5], board7[6][6]);
    printf("     |     |     |     |     |     |     \n");
    default:
        break;
    }
}
int cekKotakKosong(){
    if(papan == 3){
        int kotakKosong = 9;
        for(int i=0; i < 3; i++){
            for(int j = 0; j<3; j++){
                if(board3[i][j] != ' '){
                    kotakKosong--;
                }
            }
        }
        return kotakKosong;
    }else if(papan == 5){
        int kotakKosong = 25;
        for(int i=0; i < 5; i++){
            for(int j = 0; j<5; j++){
                if(board5[i][j] != ' '){
                    kotakKosong--;
                }
            }
        }
        return kotakKosong;
    }else if(papan == 7){
        int kotakKosong = 49;
        for(int i=0; i < 7; i++){
            for(int j = 0; j<7; j++){
                if(board7[i][j] != ' '){
                    kotakKosong--;
                }
            }
        }
        return kotakKosong;
    }
} 
void langkahPemain1(){
    int x,y;
    char a = 'X';
    if(papan == 3){
        if(pemain1.giliran == 'X'){
        do{
            printf("%s Masukkan baris (1-3): ", pemain1.nama);
            scanf("%d", &x);
            x--;
            printf("%s Masukkan kolom (1-3): ", pemain1.nama);
            scanf("%d", &y);
            y--;

            if(board3[x][y] != ' '){
                printf("langkah invalid");

            }else{
                board3[x][y] = a;
                break;
            }
        }while (board3[x][y] != ' ');
    }else{
        do{
            printf("%s Masukkan baris (1-3): ", pemain2.nama);
            scanf("%d", &x);
            x--;
            printf("%s Masukkan kolom (1-3): ", pemain2.nama);
            scanf("%d", &y);
            y--;

            if(board3[x][y] != ' '){
                printf("langkah invalid");

            }else{
                board3[x][y] = a;
                break;
            }
        }while (board3[x][y] != ' ');
    }
    }else if(papan == 5){
        if(pemain1.giliran == 'X'){
        do{
            printf("%s Masukkan baris (1-3): ", pemain1.nama);
            scanf("%d", &x);
            x--;
            printf("%s Masukkan kolom (1-3): ", pemain1.nama);
            scanf("%d", &y);
            y--;

            if(board5[x][y] != ' '){
                printf("langkah invalid");

            }else{
                board5[x][y] = a;
                break;
            }
        }while (board5[x][y] != ' ');
    }else{
        do{
            printf("%s Masukkan baris (1-3): ", pemain2.nama);
            scanf("%d", &x);
            x--;
            printf("%s Masukkan kolom (1-3): ", pemain2.nama);
            scanf("%d", &y);
            y--;

            if(board5[x][y] != ' '){
                printf("langkah invalid");

            }else{
                board5[x][y] = a;
                break;
            }
        }while (board5[x][y] != ' ');
    }
    }else if(papan== 7){
        if(pemain1.giliran == 'X'){
        do{
            printf("%s Masukkan baris (1-3): ", pemain1.nama);
            scanf("%d", &x);
            x--;
            printf("%s Masukkan kolom (1-3): ", pemain1.nama);
            scanf("%d", &y);
            y--;

            if(board7[x][y] != ' '){
                printf("langkah invalid");

            }else{
                board7[x][y] = a;
                break;
            }
        }while (board7[x][y] != ' ');
    }else{
        do{
            printf("%s Masukkan baris (1-3): ", pemain2.nama);
            scanf("%d", &x);
            x--;
            printf("%s Masukkan kolom (1-3): ", pemain2.nama);
            scanf("%d", &y);
            y--;

            if(board7[x][y] != ' '){
                printf("langkah invalid");

            }else{
                board7[x][y] = a;
                break;
            }
        }while (board7[x][y] != ' ');
    }

    }
}
void langkahPemain2(){
    int x,y;
    if(papan == 3){
        if(pemain1.giliran == 'O'){
        if(cekKotakKosong() > 0){
            do{
                printf("%s Masukkan baris (1-3): ", pemain1.nama);
                scanf("%d", &x);
                x--;
                printf("%s Masukkan kolom (1-3): ", pemain1.nama);
                scanf("%d", &y);
                y--;

                if(board3[x][y] != ' '){
                    printf("langkah invalid");

                }else{
                    board3[x][y] = pemain1.giliran;
                    break;
                }
            }while (board3[x][y] != ' ');
        }else{
            cetakMenang(' ');
        }
    }else{
        if(cekKotakKosong() > 0){
            do{
                printf("%s Masukkan baris (1-3): ", pemain2.nama);
                scanf("%d", &x);
                x--;
                printf("%s Masukkan kolom (1-3): ", pemain2.nama);
                scanf("%d", &y);
                y--;

                if(board3[x][y] != ' '){
                    printf("langkah invalid");

                }else{
                    board3[x][y] = pemain2.giliran;
                    break;
                }
            }while (board3[x][y] != ' ');
        }else{
            cetakMenang(' ');
        }
    }
    }else if(papan == 5){
        if(pemain1.giliran == 'O'){
        if(cekKotakKosong() > 0){
            do{
                printf("%s Masukkan baris (1-3): ", pemain1.nama);
                scanf("%d", &x);
                x--;
                printf("%s Masukkan kolom (1-3): ", pemain1.nama);
                scanf("%d", &y);
                y--;

                if(board5[x][y] != ' '){
                    printf("langkah invalid");

                }else{
                    board5[x][y] = pemain1.giliran;
                    break;
                }
            }while (board5[x][y] != ' ');
        }else{
            cetakMenang(' ');
        }
    }else{
        if(cekKotakKosong() > 0){
            do{
                printf("%s Masukkan baris (1-3): ", pemain2.nama);
                scanf("%d", &x);
                x--;
                printf("%s Masukkan kolom (1-3): ", pemain2.nama);
                scanf("%d", &y);
                y--;

                if(board5[x][y] != ' '){
                    printf("langkah invalid");

                }else{
                    board5[x][y] = pemain2.giliran;
                    break;
                }
            }while (board5[x][y] != ' ');
        }else{
            cetakMenang(' ');
        }
    }
    }else if(papan == 7){
        if(pemain1.giliran == 'O'){
        if(cekKotakKosong() > 0){
            do{
                printf("%s Masukkan baris (1-3): ", pemain1.nama);
                scanf("%d", &x);
                x--;
                printf("%s Masukkan kolom (1-3): ", pemain1.nama);
                scanf("%d", &y);
                y--;

                if(board7[x][y] != ' '){
                    printf("langkah invalid");

                }else{
                    board7[x][y] = pemain1.giliran;
                    break;
                }
            }while (board7[x][y] != ' ');
        }else{
            cetakMenang(' ');
        }
    }else{
        if(cekKotakKosong() > 0){
            do{
                printf("%s Masukkan baris (1-3): ", pemain2.nama);
                scanf("%d", &x);
                x--;
                printf("%s Masukkan kolom (1-3): ", pemain2.nama);
                scanf("%d", &y);
                y--;

                if(board7[x][y] != ' '){
                    printf("langkah invalid");

                }else{
                    board7[x][y] = pemain2.giliran;
                    break;
                }
            }while (board7[x][y] != ' ');
        }else{
            cetakMenang(' ');
        }
    }
    }
}
char cekMenang(){
    if(papan==3){
        // cek baris
    for(int i=0; i<3; i++){
        if( board3 [i][0] == board3[i][1] && 
            board3[i][0]== board3[i][2]){
            return board3[i][0];
        }
    }
    // cek kolom
    for(int i=0; i<3; i++){
        if(board3 [0][i] == board3[1][i] && board3[0][i]== board3[2][i]){
            return board3[0][i];
        }
    }
    // cek diagonal
    if(board3 [0][0] == board3[1][1] && board3[0][0]== board3[2][2]){
        return board3[0][0];
    }
    else if(board3 [0][2] == board3[1][1] && board3[0][2]== board3[2][0]){
        return board3[0][2];
    }
    return ' ';
    }else if(papan == 5){
       //cek mendatar
        for (int i=0; i<5; i++){
            if( board5[i][0] == board5[i][1] && 
                board5[i][0] == board5[i][2] &&
                board5[i][0] == board5[i][3] )
                {
                    return board5[i][0];
                    break;
                }else if(
                board5[i][1] == board5[i][2] &&
                board5[i][1] == board5[i][3] &&
                board5[i][1] == board5[i][4] )
                {
                    return board5[i][1];
                    break;
                }
        }
        //cek menurun
        for (int i=0; i<5; i++){
            if( board5[0][i] == board5[1][i] &&
                board5[0][i] == board5[2][i] &&
                board5[0][i] == board5[3][i])
                {
                   return board5[0][i]; 
                   break;
                }else if(
                board5[1][i] == board5[2][i] &&
                board5[1][i] == board5[3][i] &&
                board5[1][i] == board5[4][i] )
                {
                    return board5[1][i];
                    break;
                }
        }
        // cek diagonal
            if( board5[0][0] == board5[1][1] &&
                board5[0][0] == board5[2][2] &&
                board5[0][0] == board5[3][3] )
            {
                return board5[0][0];
            }
            else if( board5[0][1] == board5[1][2] &&
                board5[0][1] == board5[2][3] &&
                board5[0][1] == board5[3][4] )
            {
                return board5[0][1];
            }
            else if( board5[1][0] == board5[2][1] &&
                board5[1][0] == board5[3][2] &&
                board5[1][0] == board5[4][3] )
            {
                return board5[1][0];
            }
            else if( board5[0][3] == board5[1][2] &&
                board5[0][3] == board5[2][1] &&
                board3[0][3] == board5[3][0] )
            {
                return board5[0][3];
            }
            else if( board5[1][4] == board5[2][3] &&
                board5[1][4] == board5[3][2] &&
                board5[1][4] == board5[4][1] )
            {
                return board5[1][4];
            }
            else if( board5[1][1] == board5[2][2] &&
                board5[1][1] == board5[3][3] &&
                board5[1][1] == board5[4][4] )
            {
                return board5[1][1];
            }
            else if( board5[0][4] == board5[1][3] &&
                board5[0][4] == board5[2][2] &&
                board5[0][4] == board5[3][1])
            {
                return board5[0][4];
            }
            else if( board5[4][0] == board5[3][1] &&
                board5[4][0] == board5[2][2] &&
                board5[4][0] == board5[1][3] )
            {
                return board5[4][0];
            }
        return ' ';                
    }else if(papan == 7){
        //cek mendatar
        for(int i=0; i<7; i++)
        {
            if( board7[i][0] == board7[i][1] &&
                board7[i][0] == board7[i][2] &&
                board7[i][0] == board7[i][3] &&
                board7[i][0] == board7[i][4] )
            {
                return board7[i][0];
                break;
            }else if(
                board7[i][1] == board7[i][2] &&
                board7[i][1] == board7[i][3] &&
                board7[i][1] == board7[i][4] &&
                board7[i][1] == board7[i][5] )
            {
                return board7[i][1];
                break;
            }else if(
                board7[i][2] == board7[i][3] &&
                board7[i][2] == board7[i][4] &&
                board7[i][2] == board7[i][5] &&
                board7[i][2] == board7[i][6] )
            {
                return board7[i][2];
                break;
            }
        }
        //cek menurun
        for(int i=0; i<7; i++)
        {
            if( board7[0][i] == board7[1][i] &&
                board7[0][i] == board7[2][i] &&
                board7[0][i] == board7[3][i] &&
                board7[0][i] == board7[4][i] )
            {
                return board7[0][i];
                break;
            }
            else if( 
                board7[1][i] == board7[2][i] &&
                board7[1][i] == board7[3][i] &&
                board7[1][i] == board7[4][i] &&
                board7[1][i] == board7[5][i] )
            {
                return board7[1][i];
                break;
            }
            else if( 
                board7[2][i] == board7[3][i] &&
                board7[2][i] == board7[4][i] &&
                board7[2][i] == board7[5][i] &&
                board7[2][i] == board7[6][i] )
            {
                return board7[2][i];
                break;
            }
        //cek diagonal
        for(int i=0; i<6; i++){
            if( board7[i][i] == board7[i+1][i+1] &&
                board7[i][i] == board7[i+2][i+2] &&
                board7[i][i] == board7[i+3][i+3] &&
                board7[i][i] == board7[i+4][i+4] )
            {
                return board7[i][i];
                break;
            }
        }
        for (int i=0; i<2; i++){
            if( board7[i][i+1] == board7[i+1][i+2] &&
                board7[i][i+1] == board7[i+2][i+3] &&
                board7[i][i+1] == board7[i+3][i+4] &&
                board7[i][i+1] == board7[i+4][i+5] )
            {
                return board7[i][i+1];
                break;
            }
        }
        for (int i=0; i<2; i++){
            if( board7[i+1][i] == board7[i+2][i+1] &&
                board7[i+1][i] == board7[i+3][i+2] &&
                board7[i+1][i] == board7[i+4][i+3] &&
                board7[i+1][i] == board7[i+5][i+4] )
            {
                return board7[i+1][i];
                break;
            }
        }            
        if(
            board7[0][2] == board7[1][3] &&
            board7[0][2] == board7[2][4] &&
            board7[0][2] == board7[3][5] &&
            board7[0][2] == board7[4][6] )
            {
                return board7[0][2];
            }
        else if(
            board7[2][0] == board7[3][1] &&
            board7[2][0] == board7[4][2] &&
            board7[2][0] == board7[5][3] &&
            board7[2][0] == board7[6][4] )
            {
                return board7[2][0];
            }
        for(int i=4; i<7; i++){
            for(int j=0; j<3; j++){
            if( 
            board7[j][i] == board7[j+1][i-1] &&
            board7[j][i] == board7[j+2][i-2] &&
            board7[j][i] == board7[j+3][i-3] &&
            board7[j][i] == board7[j+4][i-4] )
            {
                return board7[j][i];
                break;
            }
                }
            }
        } return ' ';
    }
}
void cetakMenang(char winner){
    if(winner == pemain1.giliran){
        printf("%s MENANG", pemain1.nama);
    }else if(winner == pemain2.giliran){
        printf("%s MENANG", pemain2.nama);
    }else{
        printf("IMBANG");
    }
}


void modulGameplay(){
    inputNama(pemain1.nama, pemain2.nama);
    char winner = ' ';
    char respon = ' ';
    
    do
    {
        winner = ' ';
        respon = ' ';
        resetPapan();

        tampilan_pilih_giliran();
        while (winner==' ' && cekKotakKosong() !=0){
            printPapan();
            langkahPemain1();
            winner = cekMenang();
            if(winner != ' ' || cekKotakKosong() == 0){
                break;
            }
            printPapan();
            langkahPemain2();
            winner = cekMenang();
            if(winner != ' ' || cekKotakKosong() == 0){
                break;
            }
        }
        printPapan();
        cetakMenang(winner);

        printf("\nMau Main Lagi? (Y/N)");
        scanf("%c", &respon);
    } while (respon == 'Y');
    
    printf("terimakasih telah bermain");
    exitProgram();
}
